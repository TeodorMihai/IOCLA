Cotet Teodor Mihai 323CA

Analiza statica:


	Functia gets expune un program la multe vulnerabilitati care se pot exploata prin introducerea
	unui input malitios prin suprascriere de varaibile sau apelarea diverselor functii 
	care de exemplu pot deschide un shell si altfel se poate capata acces la program.


Userul si parola:
	
	Pentru user m-am uitat pe linia name[0] != 0x52 || name[1] != 0x44, am cautat caracetrele 0x52 si 0x44
	intr-o tabela ascii.
	Pentru parola am  rezolvat exuatia cu solutia: my_pass[i] = stored_pass[i] xor j.
	Chestia asta merge pentru operatia inversa a lui xor e tot xor :D 
	Am scris un program in C++ care afla parola automat, l-am inclus in arhiva cu numele generatepass.cpp
	Executabilul lui afiseaza direct parola.

secret_func1, secret_func2, fopen

	Toate cele 3 apeluri se bazeaza pe buffer overflow, explciit pe functia gets.
	Am cautat sa vad ce adresa primeste gets relativ la ebp. 	In cazul meu este ebp - 43.
	Apoi am cautat sa vad unde se face comparatia cu parrot relativ la ebp. 
	Am vazut cu db codul assembley si am gasit: ebp - 12
	Am scazut 43 - 12 = 31 si am bagat 31 de caractere de umplutura ca input.
	Apoi am introdus 4 caractere astfel incat sa formeze un int == parrot
	Apoi am mai scris 12 - 4 = 8  caractere de umplutura pala la adresa de return ai astivei,
	iar apoi puteam sa suprascriu adresa de return cu una a unei functii, astfel incat cand se termina
	functia play sa se duca la adresa de return, care este o adresa data de mine si reprezinta adresa unei functii
	aleasa de mine.

	Pentru secret_func1:
		Am cautat adresa functiei dezasambland codul cu gdb si am completat-o in continuare inputului.
	Pentru secret_func2:
		Am cautat adresa functiei dezasambland codul cu gdb si am mai trimis inca o adresa de return de umplutura
		(pentru ca atunci ca se apeleaza functia se asteapta sa aiba adresa_return, arg1, arg2... pe stiva, nu doar argumentele)
		apoi am purs argumentele functiei astfel incat sa treaca de acel if(le-am luat din gdb deja caculate :D)
	Pentru fopen:
		Stiam adresa lui fopen data de voi si am completat-o ca adresa functiei unde vreau sa sar. Apoi pentru argumente, m-am gandit 
		ce vrea sa primeasca fopen (primeste 2 adresa, una cu un string reprezentat numele fisierului si alta continand un string cu 
		modul in care se utilizeaza fisierul "wb", "r" etc) Adresa numele este adresa variabilei din main prenume +offset pana ajunge la
		prenumele propiu-zis. In timp ce adresa celui de-al doilea parametru este adresa variabilei tahw_ni_hsilgne_kaeps_yeht_od + offset pana ajunge la stringul dorit de mine adica "w"

